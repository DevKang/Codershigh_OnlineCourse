{"ast":null,"code":"/**\n * Inject script for oauth.\n * @param scriptUrl URL to import script.\n */\nexport function scriptInjector(scriptUrl) {\n  return new Promise(function (resolve, reject) {\n    var ele = document.createElement('script'); // Set attributes for script.\n\n    ele.src = scriptUrl;\n    ele.async = true;\n    ele.defer = true; // Set attributes for event listeners.\n\n    ele.onload = function () {\n      resolve();\n      ele.onload = null;\n      ele.onerror = null;\n    };\n\n    ele.onerror = function () {\n      reject('ERR_SCRIPT_INJECTION_FAILED');\n      ele.onload = null;\n      ele.onerror = null;\n    }; // Append to head.\n\n\n    document.head.appendChild(ele);\n  });\n}","map":{"version":3,"sources":["/Users/kimtaeseon/Documents/Codershigh_OnlineCourse/node_modules/react-channel-plugin/es/utils.js"],"names":["scriptInjector","scriptUrl","Promise","resolve","reject","ele","document","createElement","src","async","defer","onload","onerror","head","appendChild"],"mappings":"AAAA;;;;AAIA,OAAO,SAASA,cAAT,CAAwBC,SAAxB,EAAmC;AACtC,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC1C,QAAIC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAV,CAD0C,CAE1C;;AACAF,IAAAA,GAAG,CAACG,GAAJ,GAAUP,SAAV;AACAI,IAAAA,GAAG,CAACI,KAAJ,GAAY,IAAZ;AACAJ,IAAAA,GAAG,CAACK,KAAJ,GAAY,IAAZ,CAL0C,CAM1C;;AACAL,IAAAA,GAAG,CAACM,MAAJ,GAAa,YAAY;AACrBR,MAAAA,OAAO;AACPE,MAAAA,GAAG,CAACM,MAAJ,GAAa,IAAb;AACAN,MAAAA,GAAG,CAACO,OAAJ,GAAc,IAAd;AACH,KAJD;;AAKAP,IAAAA,GAAG,CAACO,OAAJ,GAAc,YAAY;AACtBR,MAAAA,MAAM,CAAC,6BAAD,CAAN;AACAC,MAAAA,GAAG,CAACM,MAAJ,GAAa,IAAb;AACAN,MAAAA,GAAG,CAACO,OAAJ,GAAc,IAAd;AACH,KAJD,CAZ0C,CAiB1C;;;AACAN,IAAAA,QAAQ,CAACO,IAAT,CAAcC,WAAd,CAA0BT,GAA1B;AACH,GAnBM,CAAP;AAoBH","sourcesContent":["/**\n * Inject script for oauth.\n * @param scriptUrl URL to import script.\n */\nexport function scriptInjector(scriptUrl) {\n    return new Promise(function (resolve, reject) {\n        var ele = document.createElement('script');\n        // Set attributes for script.\n        ele.src = scriptUrl;\n        ele.async = true;\n        ele.defer = true;\n        // Set attributes for event listeners.\n        ele.onload = function () {\n            resolve();\n            ele.onload = null;\n            ele.onerror = null;\n        };\n        ele.onerror = function () {\n            reject('ERR_SCRIPT_INJECTION_FAILED');\n            ele.onload = null;\n            ele.onerror = null;\n        };\n        // Append to head.\n        document.head.appendChild(ele);\n    });\n}\n"]},"metadata":{},"sourceType":"module"}